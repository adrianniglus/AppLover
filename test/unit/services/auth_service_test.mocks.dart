// Mocks generated by Mockito 5.1.0 from annotations
// in applover/test/unit/services/auth_service_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:applover/data/data_source/api/fake_dio_client.dart' as _i6;
import 'package:applover/data/data_source/local/applover_secure_storage.dart'
    as _i8;
import 'package:applover/data/data_transfer_objects/auth_token_dto.dart' as _i3;
import 'package:applover/data/data_transfer_objects/user_credentials_dto.dart'
    as _i2;
import 'package:applover/data/mapper.dart' as _i4;
import 'package:applover/domain/entities/user_credentials.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUserCredentialsDto_0 extends _i1.Fake
    implements _i2.UserCredentialsDto {}

class _FakeAuthTokenDto_1 extends _i1.Fake implements _i3.AuthTokenDto {}

/// A class which mocks [Mapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockMapper extends _i1.Mock implements _i4.Mapper {
  MockMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.UserCredentialsDto userCredentialsToUserCredentialsDto(
          _i5.UserCredentials? userCredentials) =>
      (super.noSuchMethod(
          Invocation.method(
              #userCredentialsToUserCredentialsDto, [userCredentials]),
          returnValue: _FakeUserCredentialsDto_0()) as _i2.UserCredentialsDto);
}

/// A class which mocks [FakeDioClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockFakeDioClient extends _i1.Mock implements _i6.FakeDioClient {
  MockFakeDioClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i3.AuthTokenDto> login(_i2.UserCredentialsDto? userCredentials) =>
      (super.noSuchMethod(Invocation.method(#login, [userCredentials]),
              returnValue:
                  Future<_i3.AuthTokenDto>.value(_FakeAuthTokenDto_1()))
          as _i7.Future<_i3.AuthTokenDto>);
}

/// A class which mocks [ApploverSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockApploverSecureStorage extends _i1.Mock
    implements _i8.ApploverSecureStorage {
  MockApploverSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<void> save(_i3.AuthTokenDto? authToken) =>
      (super.noSuchMethod(Invocation.method(#save, [authToken]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> deleteToken() =>
      (super.noSuchMethod(Invocation.method(#deleteToken, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<String?> getToken() =>
      (super.noSuchMethod(Invocation.method(#getToken, []),
          returnValue: Future<String?>.value()) as _i7.Future<String?>);
}
